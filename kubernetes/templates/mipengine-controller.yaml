apiVersion: apps/v1
kind: Deployment
metadata:
  name: mipengine-controller-deployment
  labels:
    app: mipengine-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mipengine-controller
  template:
    metadata:
      labels:
        app: mipengine-controller
    spec:
      nodeSelector:
        nodeType: master
      containers:
      - name: controller
        image: {{ .Values.mipengine_images.repository }}/mipengine_controller:{{ .Values.mipengine_images.version }}
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 5000
        volumeMounts:
        - mountPath: /opt/data
          name: metadata
        env:
        - name: DEPLOYMENT_TYPE
          value: "KUBERNETES"
        - name: LOCALNODES_DNS
          value: "mipengine-nodes-service"
        - name: LOCALNODES_PORT
          value: "5672"
      volumes:
      - name: metadata
        hostPath:
          path: {{ .Values.cdes_path }}

---

apiVersion: v1
kind: Service
metadata:
  name: mipengine-controller-service
spec:
  type: LoadBalancer
  selector:
    app: mipengine-controller
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30000

---

apiVersion: v1
kind: Service
metadata:
  name: mipengine-nodes-service
spec:
  clusterIP: None
  selector:
    app: mipengine-node
  ports:
    - protocol: TCP
      port: 5672
      targetPort: 5672
